experimental:
  deploy:
    vcluster:
      helm:
        - bundle: 
          values: |-
            ${ values }
          release:
            name: v2-infra
            namespace: rafay-system
        - chart: 
            name: kuberay-operator
            repo: https://ray-project.github.io/kuberay-helm/
            version: ${ kuberay_version }
          values: |-
            batchScheduler:
              enabled: true
              name: "volcano"
          release:
            name: kuberay-operator
            namespace: kuberay
        - chart:
           name: ray-cluster
           repo: https://ray-project.github.io/kuberay-helm/
           version: ${ kuberay_version }
          values: |-
            head:
              resources:
                limits:
                  cpu: ${ head_config["cpu"] }
                  memory: ${ head_config["memory"] }
                requests:
                  cpu: ${ head_config["cpu"] }
                  memory: ${ head_config["memory"] }
              image:
                repository: ${ head_config["repository"]}
                tag: ${ head_config["tag"]}
              enableInTreeAutoscaling: ${ head_config["enableInTreeAutoscaling"]}
              rayStartParams:
                num-cpus: "0"
                include-dashboard: "True"
            worker:
              image: 
                repository: ${ worker_config["repository"]}
                tag: ${ worker_config["tag"]}
              replicas: ${ worker_config["replicas"]}
              minReplicas: ${ worker_config["minReplicas"]}
              maxReplicas: ${ worker_config["maxReplicas"]}
              resources:
                limits:
                  cpu: ${ worker_config["cpu"]}
                  memory: ${ worker_config["memory"]}
                  nvidia.com/gpu: ${ worker_config["gpu"]}
                requests:
                  cpu: ${ worker_config["cpu"]}
                  memory: ${ worker_config["memory"]}
                  nvidia.com/gpu: ${ worker_config["gpu"]}
              %{ if worker_node_selector != null ~}nodeSelector:
              %{ for key, value in jsondecode(worker_node_selector) ~}
  ${ key }: ${ value }
%{ endfor ~}
%{ endif ~}
              %{ if worker_tolerations != null ~}tolerations:
              %{ for tol in jsondecode(worker_tolerations) ~}
- key: ${tol.key}
                value: ${tol.value}
                effect: ${tol.effect}
%{ endfor }
%{ endif }
          release:
            name: ${ vcluster_name }
            namespace: kuberay
  multiNamespaceMode:
    enabled: true
  genericSync:
    clusterRole:
      extraRules:
        - apiGroups: ["apiextensions.k8s.io"]
          resources: ["customresourcedefinitions"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["nodeinfo.volcano.sh"]
          resources: ["numatopologies"]
          verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
        - apiGroups: ["scheduling.volcano.sh"]
          resources: ["queues"]
          verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
    role:
      extraRules:
        - apiGroups: ["bus.volcano.sh"]
          resources: ["commands"]
          verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
        - apiGroups: ["batch.volcano.sh"]
          resources: ["jobs"]
          verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
        - apiGroups: ["flow.volcano.sh"]
          resources: ["jobflows", "jobtemplates"]
          verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
        - apiGroups: ["scheduling.volcano.sh"]
          resources: ["podgroups"]
          verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
        
    import:
      - apiVersion: batch.volcano.sh/v1alpha1
        kind: Job
      - apiVersion: scheduling.volcano.sh/v1beta1
        kind: Queue
      - apiVersion: scheduling.volcano.sh/v1beta1
        kind: PodGroup
    export:
      - apiVersion: batch.volcano.sh/v1alpha1
        kind: Job
      - apiVersion: scheduling.volcano.sh/v1beta1
        kind: Queue
      - apiVersion: scheduling.volcano.sh/v1beta1
        kind: PodGroup
    
sync:
  toHost:
    ingresses:
      enabled: true
  fromHost:
    ingressClasses:
      enabled: true
    storageClasses:
      enabled: true
    nodes:
      enabled: true
telemetry:
  enabled: false
